<%
  data =
    case @dimensions.size
    when 0
      { @result[:value] => @result[@search.select_value] }
    when 1
      @result[:rows].map { |r| [@dimensions[0][:label_method] ? @dimensions[0][:label_method].call(r[:value]) : r[:value], r[@search.select_value]] }
    when 2
      @result[:rows].map do |r|
        {
          name: r[:value],
          data: r[:rows].map { |r2| [@dimensions[1][:label_method] ? @dimensions[1][:label_method].call(r2[:value]) : r2[:value], r2[@search.select_value]] }
        }
      end
    when 3
    end
%>

<%= render '/simple_drilldown/tab_buttons', form: form %>

<div id="drilldown_area">
  <h2><%= caption %></h2>
  <h3><%= subcaption %></h3>
  <br/>
</div>

<%
  case @search.display_type
  when SimpleDrilldown::Search::DisplayType::PIE
%>
  <%= pie_chart data, height: '24rem', events: ['click'] %>
<% when SimpleDrilldown::Search::DisplayType::BAR %>
  <%= column_chart data, height: '24rem' %>
<% when SimpleDrilldown::Search::DisplayType::LINE %>
  <%= line_chart data, height: '24rem' %>
<% end %>

<div id="drilldown_search_area" style="margin-left: auto; margin-right: auto; text-align: center">
  <% (0..2).each do |i|
    options = [['', '']]
    options << [@dimensions[i][:pretty_name], @dimensions[i][:url_param_name]] if @dimensions[i]
    options += @remaining_dimensions.keys.map { |name| [controller.c_dimension_defs[name][:pretty_name], name] } %>
    <%= t(i == 0 ? :group_by : :then_by) %>:
    <%= form.select 'dimensions', options.sort, { :selected => @search.dimensions && @search.dimensions[i] },
      { onChange: 'form.submit()', name: 'search[dimensions][]', id: "search_dimensions_#{i}" } %>
  <% end %>

  <br/>
  <%= t :chart_type %>:
  <%= form.radio_button 'display_type', SimpleDrilldown::Search::DisplayType::BAR, { :onChange => 'form.submit()' } %>
  <%= form.label :display_type_bar, t(:bar) %>
  <%= form.radio_button 'display_type', SimpleDrilldown::Search::DisplayType::PIE, { :disabled => @search.dimensions.size >= 2, :onChange => 'form.submit()' } %>
  <%= form.label :display_type_pie, t(:pie) %>
  <%= form.radio_button 'display_type', SimpleDrilldown::Search::DisplayType::LINE, { :onChange => 'form.submit()' } %>
  <%= form.label :display_type_line, t(:line) %>
  <%= form.radio_button 'display_type', SimpleDrilldown::Search::DisplayType::NONE, { :onChange => 'form.submit()' } %>
  <%= form.label :display_type_none, t(:none) %>

  <% if controller.c_summary_fields.present? && @search.display_type != SimpleDrilldown::Search::DisplayType::NONE %>
    <div class="text-center">
      <label style="margin-bottom:0;margin-right:1em" for="search_select_value">Value: </label>
      <div class="form-check form-check-inline">
        <%= form.radio_button :select_value, SimpleDrilldown::Search::SelectValue::COUNT, class: "form-check-input", onChange: 'form.submit()' %>
        <label class="form-check-label mr-3" for="search_select_value_count"><%= t(:count) %></label>
      </div>
      <% controller.c_summary_fields.each do |field| %>
        <div class="form-check form-check-inline">
          <%= form.radio_button :select_value, field, class: "form-check-input", onChange: 'form.submit()' %>
          <label class="form-check-label mr-3" for="search_select_value_<%= field %>"><%= t(:field, default: field.to_s.titleize) %></label>
        </div>
      <% end %>
    </div>
<% end %>

  <%= form.check_box :order_by_value, { :onChange => 'form.submit()' } %>
  <%= form.label :order_by_value, t(:order_by_value) %>

  <%= form.check_box :list, { :onChange => 'form.submit()' } %>
  <%= form.label :list, t(:list) %>
</div>

<% if @dimensions.size == 1 &&
  [SimpleDrilldown::Search::DisplayType::BAR, SimpleDrilldown::Search::DisplayType::PIE].include?(@search.display_type) %>
  <%= javascript_tag do %>
    $('#chart-1').on('click', function(e){
    chart = Chartkick.charts['chart-1'].getChartObject();
    firstPoint = chart.getElementsAtEventForMode(e, 'nearest', { intersect: true }, false)[0]
    if (firstPoint) {
    label = chart.data.labels[firstPoint.index];
    const values = <%== @result[:rows].map { |r| r[:value] }.to_json %>;
    value = values[firstPoint.index];
    new_location = new URL(window.location.toString());
    new_location.hash = '';
    params = new_location.searchParams;
    dimensions = params.getAll('search[dimensions][]');
    if (dimensions) {
    delete(dimensions[dimensions.indexOf('<%= @dimensions[0][:url_param_name] %>')]);
    if (dimensions.length > 0) {
    params.set('search[dimensions][]', dimensions);
    } else {
    params.delete('search[dimensions][]');
    }
    }
    params.delete('search[filter][<%= @dimensions[0][:url_param_name] %>][]');
    params.set('search[filter][<%= @dimensions[0][:url_param_name] %>][]', value);
    new_location.searchParams = params;
    window.location = new_location.href;
    }
    });
  <% end %>
<% end %>
