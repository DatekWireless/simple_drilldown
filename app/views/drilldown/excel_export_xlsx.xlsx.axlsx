# frozen_string_literal: true

def excel_summary_row_xlsx(sheet, result, parent_result = nil, dimension = 0, headers = [])
  if result[:rows]
    significant_rows = result[:rows].reject { |r| r[:row_count].zero? }
    significant_rows.each_with_index do |r, i|
      sub_headers =
        if i.zero?
          if dimension.zero?
            headers
          else
            headers + [{
              value: result[:value],
              display_row_count: result[:nodes] + (result[:row_count] * (@search.list ? 1 : 0))
            }]
          end
        else
          [] # [{:value => result[:value], :row_count => result[:row_count]}]
        end
      excel_summary_row_xlsx(sheet, r, result, dimension + 1, sub_headers)
    end
  else
    render(partial: '/drilldown/excel_summary_row_xlsx',
           locals: { sheet: sheet, result: result, parent_result: parent_result, headers: headers.dup,
                     dimension: dimension })

    if @search.list
      render(partial: '/drilldown/excel_record_list_xlsx',
             locals: { sheet: sheet, result: result })
    end
  end

  return if dimension >= @dimensions.size

  render(partial: '/drilldown/excel_summary_total_row_xlsx', locals: {
           sheet: sheet, result: result, headers: headers.dup, dimension: dimension
         })
end

xlsx_package.use_shared_strings = true
wb = xlsx_package.workbook
wb.add_worksheet(name: 'Transaction Summary') do |sheet|
  # header_colspan =
  #   if @search.list
  #     [@dimensions.size - 1, 0].max + @search.fields.size - 1
  #   else
  #     @dimensions.size - 1 + (controller.c_summary_fields.size + 1) * (@search.percent ? 2 : 1)
  #   end

  # xml.Row 'ss:Height' => '18.75' do
  #   xml.Cell 'ss:MergeAcross' => header_colspan, 'ss:StyleID' => 'MainTitle' do
  #     xml.Data caption, 'ss:Type' => 'String'
  #   end
  # end
  sheet.add_row [caption]

  # xml.Row 'ss:Height' => '15.75' do
  #   xml.Cell 'ss:MergeAcross' => header_colspan, 'ss:StyleID' => 'SubTitle' do
  #     xml.Data subcaption, 'ss:Type' => 'String'
  #   end
  # end
  sheet.add_row [subcaption]

  # xml.Row do
  #   @dimensions.each do |d|
  #     xml.Cell 'ss:StyleID' => 'DimensionHeading' do
  #       xml.Data (h d[:pretty_name]).to_s, 'ss:Type' => 'String'
  #     end
  #   end
  #   xml.Cell 'ss:StyleID' => 'Heading', 'ss:MergeAcross' => @search.percent ? 1 : 0 do
  #     xml.Data t(controller.c_target_class.table_name), 'ss:Type' => 'String'
  #   end
  #   controller.c_summary_fields.each do |f|
  #     xml.Cell 'ss:StyleID' => 'Heading', 'ss:MergeAcross' => @search.percent ? 1 : 0 do
  #       xml.Data f, 'ss:Type' => 'String'
  #     end
  #   end
  # end
  sheet.add_row [
    *@dimensions.map { |d| (h d[:pretty_name]).to_s },
    t(controller.c_target_class.table_name),
    *controller.c_summary_fields.map { |f| f }
  ]

  excel_summary_row_xlsx(sheet, @result)
end
